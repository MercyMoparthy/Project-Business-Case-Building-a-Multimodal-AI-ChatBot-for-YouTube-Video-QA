 Good morning, good afternoon, good evening everybody. Welcome to AI Academy. Please remember that we have additional resources available for you. The AI and Intelligence community forum on the Now community is here with a ton of content from experts on the field to answer your questions. So please remember to go there, ask your questions and find the information you need. If you're watching this AI Academy on YouTube, remember to subscribe to the service Now Now community channel so you can get all the latest information and the latest Academy sessions. Just a quick statement before we get started. In those academies, we tend to only cover what's existing and available in the product today. In case we do mention a feature that's coming in the future roadmap, please don't take that as a purchase decision. And today, welcome to our session on what's new in document intelligence. My name is Loic Sanchez. I'm an outbound product manager for AI products. And with me today is Joe. Hey, how's it going? My name is Joe Wilma. I'm a senior principal outbound product manager with Automation Engine. So our goal for today is to give you a brief overview that's only going to take a few minutes. And then Loic's going to dive into some of the details on the new features that we have available in 2.0 and 2.1 for document intelligence. Document intelligence is a new application on the Now platform enabling organizations to automate and accelerate the process of extracting data from documents. These could be both structured and semi-structured documents and integrate that data into larger automation workflows. Extracting information from documents, as you all know, is typically a manual, time consuming process. And it often leads to a lot of errors and rework having to go in and change values or make sure that it got the correct field. So to address this business challenge, customers need a way to automate this process to drive speed and efficiency and to freed up employees such as customer service agents for higher value work. They need to quickly extract data held in multiple types of documents such as PDFs, scans, paper documents, driver's license IDs, so they can act on it and use that data in their digital workflows. So with document intelligence, we have an AI first design that reduces processing time, minimizes data entry, and is resilient to how that document changes over time. And through continual learning field by user feedback, the AI models learn in real time. And this is significantly increasing the accuracy of what is extracted from those documents. Now document intelligence requires automation engine professional or enterprise and is also available in financial services operations for banking and insurance. In the latest version of document intelligence, we're now on 2.1, it's easier to get set up and get going. It enables the path to true automation with little human interaction. It offers more features enabling different document and data types such as table extraction. And we're looking at better optical character recognition and artificial intelligence producing better results. Thanks to the new flow designer templates for document intelligence, it is now even easier to automate a process in the end when embedding document intelligence into your workflows. It reduces configuration time through a low code setup and configuration. Pre-populated flows are created from templates with the populated data that goes into them based on the test definition. This requires you to simply click and activate the flow to make use of it. Straight through processing is a new feature in document intelligence that takes document automation to the next level. Values can be extracted with less involvement from the human agents. If a certain confidence threshold is met, the values are automatically extracted without validation. This allows the business to stay in control by defining that confidence threshold. And what that is, the confidence score is calculated automatically in the background. But when the warning threshold is set manually by the admin user as seen here on the screen, the warning threshold is then compared against that confidence score behind the scenes. If the admin user puts 0.7, that means you will see a warning every time the artificial intelligence is less than 70% confident that it got the correct answer. And now in this version, it is possible to extract tables from documents. This is a new data type in document intelligence, and agents can extract items from tables, even if the number of rows is not predefined. And now we have time for our first poll. We want to get a little bit of feedback from you all on what's going on out there with document intelligence and how you are looking to use document intelligence, whether that be template-based forms, contracts, other use cases, HR documents, invoices, purchase orders. A quick question for you, Joe. Specifically in the context of automation engine, what are the other products of automation engine that we can integrate documental with? Yes, so automation engine is currently composed of integration hub, RPA hub, and document intelligence, and automation center. So within those workflows that you would design with your integration hub, integrations or spokes, within the flows that would go into how you interact with your RPA bots, you have the opportunity to utilize document intelligence for any document extracting that you would need to do, or data extraction. Okay, great, thank you. We have a question in the Q&A, what are the use cases of document intelligence in the HR space? So as of today, there is no out-of-the-box true integration between our HR products and document intelligence. But as Joe just mentioned, it's possible to create your own workflows using the automation engine suite of tools. Correct. All right, I think we are ready to close the poll. We've got mainly HR documents and invoices as the main answer. Let's get moving to the next section. Cover some of the new features of version 2.1. So document intelligence version 2.0 was released last August. And actually today, as part of our Tokyo release, we are also releasing document intelligence v2.1. So what's new in v2.1? There is enhancements around the simple tables extraction. So it is now possible to auto-fill table extraction under certain circumstances. So it means when we have an explicit grid and the table is on a single page, and we already processed 10 documents, then table extraction is actually automated now. And that's coming with v2.1. When we do not automatically extract the tables, the data validation process is a lot easier. We have real-time recommendation after the first row, and I'll show that in the exercise later on. Also, it's possible to have a reference field between the two tables that we use to extract our documents. So we'll see that clearly in the exercise as well. Next slide. We have a question. We have APIs for automating the extraction. So we'll see today in the exercise how you create your document intelligence use case. Are you trained, your model, with a few documents? And then how you integrate that with Flow Designer. And that should cover your end-to-end workflow. And with straight-through processing, we have automation of the complete extraction process. So that and Flow Designer should cover your use cases. Going back to our enhancements. So some other announcements that we have in 2.1 is optical character recognition and AI improvements. So as of v2.1, we can now support document rotation by 90 degrees increment, as well as adding up to 50 attributes now per task definition as opposed to 30 in the past. And also, it is now possible to predict whether a field is present or not. What does that mean? Is that, for example, when you are extracting addresses, you know that you have zip codes or states, codes that are different from a country to another country. So the AI would be automatically able to pick up that for a specific address type. The field is not needed. So it won't block the automation there. The OCR engine itself is also better. There's some improvement extracting text from document, as well as an improved PDF parsing engine so that the experience and the results are better. All right. And with that, now we can move to the exercise. All right, for our exercise today. So we're going to be using documentel v2.1. If you're not sure what version you're using, just go to your plugins in your instance and check what version you have installed. I see here it's 2.1.0 and that's my version 2.1. We will extract values from invoices today and I have a few use cases. And this is the type of document I will be using. It's an invoice. I have a date, an invoice number, the company that sent the invoice and to who it was sent, as well as a table. That's what we call a table in the context of document intelligence. It's a list of items that clearly could have one or many items and I don't necessarily know how many items are going to be on my table. And that's where I would create a specific configuration for my table extraction here. And then obviously my total, the total amount of my invoice is going to be something I want to be looking at. So before I start, I gathered a few of those invoices so I can put them in my doc intel. All right, so let's get started with that. And I'm going to navigate to doc intel task definition. And I'm going to create a task definition. If you join our previous academy on doc intel, you probably remember that. I'm going to show you some of the new features of V2 specifically. But the setup process starts the same way. I'm creating a task definition and I'm giving it a name for today in voice. And then I'll see my task definition. So first thing I want to set up on my task definition here is to define my target table. And that's the table in service now that I'm going to be using to both trigger document extraction tasks and extract the value and store them somewhere once the extraction is done. So in my use case here, I'm actually using a table that I call invoice task. But depending on your use case, just use the table that works best for you. So here invoice task. And then I'm going to create my keys. Keys are values from the document that are not part of the table. So you remember, if we go back to our invoice documents, every invoice is going to have an invoice number. Every invoice is going to have the name of the company that sends the invoice. And every invoice is going to have the total. They might be laid out differently on the page. They might be located differently in a different format. But for all my documents, I know I need those values. And that's how I set up these as keys. So just save my task definition. And then I'm going to create one key for each of those values I need to extract. So the first key is the invoice number. And what's new here is the target field field. And see here that relates to the target table that I just set up on my task definition. What I'm seeing here is once I extract the value from the document, then store it on the field of my table. And that way, the automation or the workflow works properly. So for my invoice number, I'm going to set, I'm going to target the invoice number field. I'm going to create two more keys, one for the invoice, the company that sends the invoice. And I'm going to use the invoice company field. And finally, I'm going to create a key for the invoice total amount. And I'm stored that in the invoice amount field. All right, I am done with my keys. Let's move to configuring extraction of the table. The table extraction is configured via the key groups related list. So I'm going to create one key group per table I need to extract. Let's go back to the document once again. In that specific use case, with that document, I only have one table. So I'm going to create one key group. My key group would be my list of items, basically my list of line items here. And I'm going to specify a target table. And what we see here is that that table can be different from the table that I set up in my task definition. And that's because I might want to store those values in a different table. And that's the case here. I actually have a table to store my line item. I call that table invoice line item. And I'm going to use that to store my table values. I'm also going to use a parent mapping to field. So I have a reference field on my table that link back to my invoice task that I can use so that my records are linked to the main table, the main record. So I submit that. So I create one key group and then I need to open the key group again. And I need to create keys. And I'll create one key for each value of the elements of the table. In that case, I am going to create, so let's go back to the document again. I want to extract the name of the item and the line total. Okay, that's what I need here. So I will create a item name field. I'm going to attach that to my task definition. I'm going to make sure it's in the right key group. And then I can select the target field. And I see here the table that is targeted is the table that was linked to my key group. So I can use an item description field. So that's one key. And then I'm going to create a second key again attached to my key group. And that would be the line total value. We set that up with the right key group. And I'm going to link that to the line item total field. All right, I can submit that. Once I'm done doing that, I am ready to test this out with a first task. So I will create a task, a docking task here, so that we let give it time to process. And then we'll move on to integrating that in Flow Designer. So I'm going to give it a name. It's task number one. I'm going to attach my invoice to it. And I'm going to click on process task. And we're going to give it a few minutes to process. In the meantime, let's integrate that into Flow Designer. And so the way this is done is via the integration setups, related to this here. And I'm going to click on new. And I'm going to see the creation form. And I see here I have two available types. I can create a flow integration to process my tasks, as well as a flow integration to extract the values once I'm done processing my task. And we'll start with the process task. So I give it a name, process invoice, process task. And every time my task is created as active, I want a new docking task to be created as well. I'll make sure the create flow checkbox is checked here. And then I can click on submit. And that will bring me back to my task definition. There we go. And I created an integration setup to process my invoice with a flow. I'm going to open that flow here, because even though it was created, as we saw, I just need to activate it. Just checking that everything is created as I expected. So we basically have a template now that created my flow based on my inputs from my task definition. So when my invoice task is created, then create a docking task and process it. That looks good to me. So I can activate that. All right. I activated my flow designer task here. And then I'm going to create the second piece of my integration. And that's after I am done extracting the values, I want them to be stored on the record that triggered the flow. And that's going to be the extraction process. And I'm going to give you the type of extract value there. When I specify extract values, I see I don't have the condition builder, because it basically triggers every time my docking task is processed. I make sure the create flow checkbox is enabled. And then I can click on submit. Is this available in a room? No. Docking is a product that is available starting in San Diego. All right. I will open my flow. Same thing here. I created a flow for the extraction process. Task updated where the status changed to done. And then so that's my template that was prepopulated based on my docking tail again, integration setup. What it does is that one time done processing my task in the docking tail UI and extracted my values, then I retrieved those exact values. And then I'm going to set them in the record and the values are populated. So that's good. I can activate that. Okay. That's done. All right. Let's see if the flow works properly and to do that. So I will go to my invoice task table. And that's where I create a new record. So what I'm doing here is I'm using an invoice task as a way to trigger my docking tail extraction. And then I created fields here on that record so that I can store the values that are extracted from the document. So it's a way for me to integrate the document intelligence extraction engine with the end to end workflows on the platform. And so the way I do that now is that I create a invoice task, attach my invoice to it, and then I can submit it. And so I created a new task. Now I'm going to go back to my task definition and look at the related list of tasks. And make sure that here indeed I create the flow that I set up in the integration setup here. Indeed trigger the creation of the docking tail invoice task. So I can open it. I see I have a relationship here between the docking tail task and the invoice task that triggered that. And I can show that in docking tail, do my extraction. So I get the invoice number. There. Get the invoice amounts. That's the number all the way at the bottom. And then I can extract my table values. So consumable 35,460. And then the second line is my hardware. And I have a 22,452. All right. I can submit that. I'm going to save it. And then I can close that. All right. Now if I look at the task, the invoice type that I created, I see already some values. So let's take closer look at that. And that's what the second part of my flow designer triggered, right? After I am done extracting the values, they are extracted, retrieved, and then set on my task. So my invoice task here has the value of the invoice, the company, the invoice number, as well as two line items here that referred to the consumable and hardware items from the table and the invoice. All right. What we also want to show is a straight through processing. So the straight through processing setting can be accessed via the task definition here. I have a checkbox to enable, I'm going to call it STP. And then I can set a threshold here. So let me show you on a other instance on tasks that actually train on more than one or two invoices. So here I enable STP and I set my threshold. My threshold is the value I decide is my confidence level. So in that case, 0.7. That's a 70% confidence level in the values that are predicted by AI. If that confidence level is achieved, then the values on the document are extracted automatically without having to do the manual validation. So how does that look like? If I look at all the list of document intelligence tasks that I have here, and I look at the is STP processed, filmed here, I see that for some of those tasks, even after 21 invoices, some of those tasks actually were automatically processed. It means that I submitted my PDF as an invoice here, and the confidence level was achieved 70% here. And these values, the invoice number, the invoice company, the amount, and the line items were extracted automatically without having to do any manual data validation. We're going to end the session now and remember this is recorded. This is posted on our YouTube. So if you think that was helpful, and you want to look at it later, go to our AI and Intelligence Community Forum, and feel free to share that with your colleagues who are also interested. That's it for today. Thank you for joining everybody, and we'll see you next time for next session of AI Academy. Thank you. Thank you, Joe. you you So I will show you how that looks on a document that was previously already extracted, because I don't think we'll see any progress being done here. But just to highlight what we built today, we still can extract the company name and the toll that is on the invoice, and now we can extract values from the tables. And the way you would see that being processed by you will have one set ready. I'm going to add as many groups as you have. The value is on my extract. My first is not ready. The amount is that value, and then I get a second number from the previous Academy. And then you remember that click once you have it, it's items assigned to the AI based on our main engine. And that usually takes a couple of minutes to create an enhancement My came in task record and then create all in reduced child as of right now. Our instances line up on my processing property. All right, let's do it. Let's try. All right. Yes, I apologize for that. I don't think we're going to see the tasks being processed, but at least we saw how to set that up. So if you install ducking tell on your instance today and upgrade to B2.1, I'm sure we're going to be able to repeat those steps and make it work for your specific use cases. All right. If there are any questions, please post them on the Q&A.